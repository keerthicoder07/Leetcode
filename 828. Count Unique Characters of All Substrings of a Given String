import java.util.Arrays;

class Solution {
    public int uniqueLetterString(String s) {
        int n = s.length();
        int[] prev = new int[n];
        int[] next = new int[n];

        // For A..Z
        int[] last = new int[26];
        Arrays.fill(last, -1);

        // prev[i]: previous index of s[i], or -1 if none
        for (int i = 0; i < n; i++) {
            int idx = s.charAt(i) - 'A';
            prev[i] = last[idx];
            last[idx] = i;
        }

        // reset last to n for next pass
        Arrays.fill(last, n);

        // next[i]: next index of s[i], or n if none
        for (int i = n - 1; i >= 0; i--) {
            int idx = s.charAt(i) - 'A';
            next[i] = last[idx];
            last[idx] = i;
        }

        long ans = 0;
        for (int i = 0; i < n; i++) {
            long left = i - prev[i];
            long right = next[i] - i;
            ans += left * right;
        }
        return (int) ans;
    }
}
